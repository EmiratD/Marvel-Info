{"version":3,"sources":["resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","hooks/http.hook.js","services/MarvelService.js","components/spinner/Spinner.js","components/errorMassage/error.gif","components/errorMassage/ErrorMassage.js","components/comicsList/ComicsList.js","components/errorBoundary/ErrorBoundary.js","components/pages/ComicsPage.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","resources/img/vision.png","components/pages/MainPage.js","components/pages/singleComic/SingleComic.js","components/pages/404page.js","components/appHeader/AppHeader.js","components/app/App.js","index.js"],"names":["AppBanner","className","src","avengers","alt","avengersLogo","useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useMarvelService","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","id","getAllComics","_transformComics","getComic","char","name","length","substring","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","pageCount","language","textObjects","price","prices","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","img","objectFit","ComicsList","list","setList","newItemLoading","setItemLoading","setOffset","setCharEnded","useEffect","onRequest","initial","then","getLoadingChar","newList","ended","Comics","to","comicsAll","arr","forEach","element","push","renderAllComics","errorMessage","spinner","onClick","ErrorBoundary","state","errorInfo","console","log","this","setState","props","children","Component","ComicsPage","View","ojFit","href","RandomChar","setChar","updateChar","onCharloaded","Math","floor","random","content","mjolnir","CharItem","heroes","onCharSelected","tabIndex","onKeyPress","e","key","CharList","charEnded","listHEroes","getCharItem","disabled","Skeleton","infoSize","info","item","i","CharInfo","upDateChar","charId","skeleton","MainPage","selectedChar","decoration","SingleComic","comicId","useParams","comic","setComic","onComicloaded","ErrorPage","AppHeader","and","color","isActive","App","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"wVAAe,G,MAAA,IAA0B,sCCA1B,MAA0B,0C,OCiB1BA,EAbG,WACd,OACI,sBAAKC,UAAU,cAAf,UACI,qBAAKC,IAAKC,EAAUC,IAAI,aACxB,sBAAKH,UAAU,mBAAf,mCAC0B,uBAD1B,iBAIA,qBAAKC,IAAKG,EAAcD,IAAI,sB,qCC+BzBE,EAzCC,WACd,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BF,mBAAS,MAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAoCA,MAAO,CAAEH,UAASI,QAlCFC,sBAAW,uCACzB,WACEC,GADF,mCAAAC,EAAA,6DAEEC,EAFF,+BAEW,MACTC,EAHF,+BAGS,KACPC,EAJF,+BAIY,CAAE,eAAgB,oBAE5BT,GAAW,GANb,kBAS2BU,MAAML,EAAK,CAAEE,SAAQC,OAAMC,YATtD,WASUE,EATV,QAWkBC,GAXlB,uBAYY,IAAIC,MAAJ,0BAA6BR,EAA7B,oBAA4CM,EAASG,SAZjE,yBAeuBH,EAASI,OAfhC,eAeUC,EAfV,OAiBIhB,GAAW,GAjBf,kBAmBWgB,GAnBX,wCAqBIhB,GAAW,GACXE,EAAS,KAAEe,SAtBf,+DADyB,sDA2BzB,IAOyBhB,QAAOiB,WAJfd,uBAAY,WAC7BF,EAAS,QACR,MCuBUiB,EA3DW,WACxB,MAAgDtB,IAAxCE,EAAR,EAAQA,QAASI,EAAjB,EAAiBA,QAASF,EAA1B,EAA0BA,MAAOiB,EAAjC,EAAiCA,WAE3BE,EAAW,4CACXC,EAAU,0CAIVC,EAAgB,uCAAG,0CAAAhB,EAAA,6DAAOiB,EAAP,+BAHL,IAGK,SACLpB,EAAQ,GAAD,OACpBiB,EADoB,qCACiBG,EADjB,YAC2BF,IAF7B,cACjBG,EADiB,yBAIhBA,EAAIR,KAAKS,QAAQC,IAAIC,IAJL,2CAAH,qDAOhBC,EAAY,uCAAG,WAAOC,GAAP,eAAAvB,EAAA,sEACDH,EAAQ,GAAD,OACpBiB,EADoB,sBACES,EADF,YACQR,IAFd,cACbG,EADa,yBAIZG,EAAoBH,EAAIR,KAAKS,QAAQ,KAJzB,2CAAH,sDAOZK,EAAY,uCAAG,0CAAAxB,EAAA,6DAAOiB,EAAP,+BAAgB,EAAhB,SACDpB,EAAQ,GAAD,OAAIiB,EAAJ,qDAAyDG,EAAzD,YAAmEF,IADzE,cACbG,EADa,yBAEZA,EAAIR,KAAKS,QAAQC,IAAIK,IAFT,2CAAH,qDAKZC,EAAQ,uCAAG,WAAOH,GAAP,eAAAvB,EAAA,sEACKH,EAAQ,GAAD,OAAIiB,EAAJ,kBAAsBS,EAAtB,YAA4BR,IADxC,cACPG,EADO,yBAENO,EAAiBP,EAAIR,KAAKS,QAAQ,KAF5B,2CAAH,sDAKRE,EAAsB,SAACM,GAC3B,MAAO,CACLJ,GAAII,EAAKJ,GACTK,KAAMD,EAAKC,KAAKC,OAAS,GAAnB,UAA2BF,EAAKC,KAAKE,UAAU,EAAG,IAAlD,OAA6DH,EAAKC,KACxEG,YAAaJ,EAAKI,YAAL,UAAsBJ,EAAKI,YAAYD,UAAU,EAAG,KAApD,OAAgE,0BAC7EE,UAAWL,EAAKK,UAAUC,KAAO,IAAMN,EAAKK,UAAUE,UACtDC,SAAUR,EAAKS,KAAK,GAAGrC,IACvBsC,KAAMV,EAAKS,KAAK,GAAGrC,IACnBuC,OAASX,EAAKW,OAAOC,QAInBd,EAAmB,SAACa,GACxB,MAAO,CACHf,GAAIe,EAAOf,GACXiB,MAAOF,EAAOE,MACdT,YAAaO,EAAOP,aAAe,0BACnCU,UAAWH,EAAOG,UAAP,UAAsBH,EAAOG,UAA7B,OAA8C,2CACzDT,UAAWM,EAAON,UAAUC,KAAO,IAAMK,EAAON,UAAUE,UAC1DQ,SAAUJ,EAAOK,YAAYD,UAAY,QACzCE,MAAON,EAAOO,OAAO,GAAGD,MAAjB,UAA4BN,EAAOO,OAAO,GAAGD,MAA7C,KAAwD,kBAIrE,MAAO,CAAEnD,UAASE,QAAOqB,mBAAkBM,eAAcV,aAAYY,eAAcE,aCMtEoB,EAhEC,WACZ,OACI,sBAAKC,MAAM,6BAA6BC,MAAO,CAACC,OAAQ,SAAUC,WAAY,OAAQC,QAAS,SAAUC,MAAM,QAAQC,OAAO,QAAQC,QAAQ,cAAcC,oBAAoB,WAAhL,UACI,mBAAGC,UAAU,mBAAb,SACA,mBAAGA,UAAU,YAAb,SACA,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,IAAvD,UACA,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,UAAUC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAClI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,mBAGrG,mBAAGR,UAAU,iDAAb,SACJ,mBAAGA,UAAU,aAAb,SACA,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,QAAvD,UACA,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,SAASC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eACjI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,kBAGrG,mBAAGR,UAAU,mBAAb,SACJ,mBAAGA,UAAU,aAAb,SACA,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,OAAvD,UACA,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,UAAUC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAClI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,mBAGrG,mBAAGR,UAAU,kDAAb,SACJ,mBAAGA,UAAU,cAAb,SACA,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,QAAvD,UACA,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,QAAQC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAChI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,iBAGrG,mBAAGR,UAAU,kCAAb,SACJ,mBAAGA,UAAU,cAAb,SACA,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,MAAvD,UACA,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,UAAUC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAClI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,mBAGrG,mBAAGR,UAAU,kDAAb,SACJ,mBAAGA,UAAU,cAAb,SACA,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,QAAvD,UACA,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,SAASC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eACjI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,kBAGrG,mBAAGR,UAAU,kCAAb,SACJ,mBAAGA,UAAU,cAAb,SACA,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,OAAvD,UACA,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,UAAUC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAClI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,mBAGrG,mBAAGR,UAAU,iDAAb,SACJ,mBAAGA,UAAU,cAAb,SACA,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,QAAvD,UACA,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,KAAKC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAC7H,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,kBCxDtG,MAA0B,kCCQ1BK,EANM,WACjB,OACI,qBAAKlF,IAAKmF,EAAKtB,MAAO,CAAEG,QAAS,QAASC,MAAO,QAASC,OAAO,QAASkB,UAAW,UAAWtB,OAAQ,UAAW5D,IAAI,WCgFhHmF,G,MA3EI,WACjB,MAAwBhF,mBAAS,IAAjC,mBAAOiF,EAAP,KAAaC,EAAb,KACA,EAAyClF,oBAAS,GAAlD,mBAAOmF,EAAP,KAAuBC,EAAvB,KACA,EAA4BpF,mBAAS,GAArC,mBAAOyB,EAAP,KAAe4D,EAAf,KACA,EAAkCrF,oBAAS,GAA3C,mBAAkBsF,GAAlB,WAEA,EAAyCjE,IAAjCpB,EAAR,EAAQA,QAASE,EAAjB,EAAiBA,MAAO6B,EAAxB,EAAwBA,aAExBuD,qBAAU,WACRC,EAAU/D,GAAQ,KACjB,IAEH,IAAM+D,EAAY,SAAC/D,EAAQgE,GACfL,GAAVK,GACAzD,EAAaP,GAAQiE,KAAKC,IAGtBA,EAAiB,SAACC,GACtB,IAAIC,GAAQ,EACRD,EAAQvD,OAAS,IACnBwD,GAAQ,GAEVX,EAAQ,GAAD,mBAAKD,GAAL,YAAcW,KACrBR,GAAe,GACfC,EAAU5D,EAAS,GACnB6D,EAAaO,IAGTC,EAAS,SAAC,GAAc,IAAbhD,EAAY,EAAZA,OACPN,EAAgCM,EAAhCN,UAAWY,EAAqBN,EAArBM,MAAOJ,EAAcF,EAAdE,MAAOjB,EAAOe,EAAPf,GAEjC,OACE,oBAAIrC,UAAU,eAAd,SACE,eAAC,IAAD,CAAMqG,GAAE,kBAAahE,GAArB,UACE,qBACEpC,IAAK6C,EACL3C,IAAKmD,EACLtD,UAAU,qBAEZ,qBAAKA,UAAU,oBAAf,SAAoCsD,IACpC,qBAAKtD,UAAU,qBAAf,SAAqC0D,UAgBvC4C,EAVkB,SAACf,GACvB,IAAIgB,EAAM,GAMV,OAJAhB,EAAKiB,SAAQ,SAACC,GACZF,EAAIG,KAAK,cAACN,EAAD,CAAQhD,OAAQqD,GAAcA,EAAQpE,QAG1C,oBAAIrC,UAAU,eAAd,SAA8BuG,IAGrBI,CAAgBpB,GAE5BqB,EAAenG,EACjB,cAAC,EAAD,IACA,KACEoG,EAAUtG,IAAYkF,EACxB,cAAC,EAAD,IACA,KAEJ,OACE,sBAAKzF,UAAU,eAAf,UACGsG,EAAWO,EAASD,EACrB,wBAAQE,QAAS,WAAOhB,EAAU/D,IAAU/B,UAAU,mCAAtD,SACE,qBAAKA,UAAU,QAAf,8B,gCCrDO+G,E,4MArBbC,MAAQ,CACNvG,OAAO,G,uDAKT,SAAkBA,EAAOwG,GACvBC,QAAQC,IAAI1G,EAAOwG,GACnBG,KAAKC,SAAS,CACZ5G,OAAO,M,oBAIX,WACE,OAAI2G,KAAKJ,MAAMvG,MACN,cAAC,EAAD,IAEF2G,KAAKE,MAAMC,a,GAlBMC,aCabC,EAXI,WACf,OACI,mCACI,eAAC,EAAD,WACI,cAAC,EAAD,IACA,cAAC,EAAD,UCVD,G,MAAA,IAA0B,qCCsDnCC,EAAO,SAAC,GAAc,IAAZjF,EAAW,EAAXA,KACNC,EAAiDD,EAAjDC,KAAMG,EAA2CJ,EAA3CI,YAAaC,EAA8BL,EAA9BK,UAAWG,EAAmBR,EAAnBQ,SAAUE,EAASV,EAATU,KAE1CwE,EAEJ,wEADA7E,EAEI,UACA,QAEN,OACE,sBAAK9C,UAAU,oBAAf,UACE,qBACEC,IAAK6C,EACL3C,IAAI,mBACJH,UAAU,kBACV8D,MAAO,CAAEuB,UAAU,GAAD,OAAKsC,MAEzB,sBAAK3H,UAAU,mBAAf,UACE,mBAAGA,UAAU,mBAAb,SAAiC0C,IACjC,mBAAG1C,UAAU,oBAAb,SAAkC6C,IAClC,sBAAK7C,UAAU,mBAAf,UACE,mBAAG4H,KAAM3E,EAAUjD,UAAU,sBAA7B,SACE,qBAAKA,UAAU,QAAf,wBAEF,mBAAG4H,KAAMzE,EAAMnD,UAAU,2BAAzB,SACE,qBAAKA,UAAU,QAAf,8BAQG6H,EA/EI,WACjB,MAAuBvH,mBAAS,IAAhC,mBAAOmC,EAAP,KAAYqF,EAAZ,KAGA,EAAmDnG,IAA5CpB,EAAP,EAAOA,QAASE,EAAhB,EAAgBA,MAAO2B,EAAvB,EAAuBA,aAAcV,EAArC,EAAqCA,WAErCmE,qBAAU,WAAKkC,MAAgB,IAE/B,IAAMC,EAAe,SAACvF,GACpBqF,EAAQrF,IAIJsF,EAAa,WACjBrG,IACA,IAAMW,EAAK4F,KAAKC,MAAM,IAAAD,KAAKE,SAAiC,QAC5D/F,EAAaC,GACV2D,KAAKgC,IAGJpB,EAAenG,EAAQ,cAAC,EAAD,IAAmB,KAC1CoG,EAAUtG,EAAU,cAAC,EAAD,IAAc,KAClC6H,EAAY7H,GAAWE,EAAgC,KAAvB,cAAC,EAAD,CAAMgC,KAAMA,IAElD,OACE,sBAAKzC,UAAU,aAAf,UACG4G,EACAC,EACAuB,EACD,sBAAKpI,UAAU,qBAAf,UACE,oBAAGA,UAAU,oBAAb,wCAEE,uBAFF,4CAKA,mBAAGA,UAAU,oBAAb,mCACA,wBAAQA,UAAU,sBAAsB8G,QAASiB,EAAjD,SACE,qBAAK/H,UAAU,QAAf,sBAEF,qBAAKC,IAAKoI,EAASlI,IAAI,UAAUH,UAAU,kCC0C7CsI,G,MAAW,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,eAClBnG,EAAwBkG,EAAxBlG,GAAIK,EAAoB6F,EAApB7F,KAAMI,EAAcyF,EAAdzF,UAEd6E,EAEF,wEADA7E,EAEI,UACA,QAEN,OACE,qBACE9C,UAAU,aAEV8G,QAAS,kBAAM0B,EAAenG,IAC9BoG,SAAU,EACVC,WAAY,SAACC,GACG,MAAVA,EAAEC,KAAyB,UAAVD,EAAEC,KACrBJ,EAAenG,IAPrB,UAWE,qBAAKpC,IAAK6C,EAAW3C,IAAKuC,EAAMoB,MAAO,CAAEuB,UAAU,GAAD,OAAKsC,MACvD,qBAAK3H,UAAU,aAAf,SAA6B0C,MAVxBL,KAmBIwG,EA/GE,SAACvB,GAEhB,MAAwBhH,mBAAS,IAAjC,mBAAOiF,EAAP,KAAaC,EAAb,KACA,EAAyClF,oBAAS,GAAlD,mBAAOmF,EAAP,KAAuBC,EAAvB,KACA,EAA4BpF,mBAAS,GAArC,mBAAOyB,EAAP,KAAe4D,EAAf,KACA,EAAkCrF,oBAAS,GAA3C,mBAAOwI,EAAP,KAAkBlD,EAAlB,KAEA,EAA2CjE,IAApCpB,EAAP,EAAOA,QAASE,EAAhB,EAAgBA,MAAOqB,EAAvB,EAAuBA,iBAEvB+D,qBAAU,WACRC,EAAU/D,GAAQ,KACjB,IAEH,IAAM+D,EAAY,SAAC/D,EAAQgE,GACfL,GAAVK,GACAjE,EAAiBC,GACdiE,KAAKC,IAIJA,EAAiB,SAACC,GACtB,IAAIC,GAAQ,EACRD,EAAQvD,OAAS,IACnBwD,GAAQ,GAEVX,EAAQ,GAAD,mBAAKD,GAAL,YAAcW,KACrBR,GAAe,GACfC,EAAU5D,EAAS,GACnB6D,EAAaO,IAkBX4C,EAfgB,SAACxD,GACnB,IAAIgB,EAAM,GAWV,OATAhB,EAAKiB,SAAQ,SAACC,GACZF,EAAIG,KACF,cAAC,EAAD,CACE6B,OAAQ9B,EACR+B,eAAgBlB,EAAMkB,gBACjB/B,EAAQpE,QAIZkE,EAGQyC,CAAYzD,GAEvBqB,EAAenG,EACnB,oBAAIT,UAAU,cAAd,SACE,cAAC,EAAD,MAEA,KACE6G,EAAUtG,IAAYkF,EAC1B,oBAAIzF,UAAU,cAAd,SACE,cAAC,EAAD,MAEA,KAEJ,OACE,sBAAKA,UAAU,aAAf,UACE,qBAAIA,UAAU,aAAd,UACG+I,EACAnC,EACAC,KAEH,wBACE7G,UAAU,mCACV8D,MAAO,CAAEG,QAAS6E,EAAY,OAAS,SACvCG,SAAUxD,EACVqB,QAAS,WACPhB,EAAU/D,IALd,SAQE,qBAAK/B,UAAU,QAAf,6BChEOkJ,G,MAjBE,WACb,OACI,qCACI,mBAAGlJ,UAAU,eAAb,0DACA,sBAAKA,UAAU,WAAf,UACI,sBAAKA,UAAU,yBAAf,UACI,qBAAKA,UAAU,2BACf,qBAAKA,UAAU,4BAEnB,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,kCCkCzB0H,G,MAAO,SAAC,GAAY,IAAXjF,EAAU,EAAVA,KACLC,EAAyDD,EAAzDC,KAAMG,EAAmDJ,EAAnDI,YAAaC,EAAsCL,EAAtCK,UAAWG,EAA2BR,EAA3BQ,SAAUE,EAAiBV,EAAjBU,KAAMC,EAAWX,EAAXW,OAElD+F,EAAWtG,EAAYF,OAAS,IAAME,EAAYD,UAAU,EAAG,KAAO,MAAQC,EAC9EuG,EAAuB,KAAhBvG,EAAqB,0DAA4DsG,EACxFxB,EAAsB,wEAAd7E,EAAsF,UAAY,QAE9G,OACE,qCACE,sBAAK9C,UAAU,eAAf,UACE,qBAAKC,IAAK6C,EAAW3C,IAAKuC,EAAMoB,MAAO,CAAEuB,UAAU,GAAD,OAAKsC,MACvD,gCACE,qBAAK3H,UAAU,kBAAf,SAAkC0C,IAClC,sBAAK1C,UAAU,aAAf,UACE,mBAAG4H,KAAM3E,EAAUjD,UAAU,sBAA7B,SACE,qBAAKA,UAAU,QAAf,wBAEF,mBAAG4H,KAAMzE,EAAMnD,UAAU,2BAAzB,SACE,qBAAKA,UAAU,QAAf,6BAKR,qBAAKA,UAAU,cAAf,SAA8BoJ,IAC9B,qBAAKpJ,UAAU,eAAf,qBACA,qBAAIA,UAAU,oBAAd,UACsB,IAAlBoD,EAAOT,OAAiB,oBAAI3C,UAAU,oBAAd,iCAAuC,WAAwC,KACxGoD,EAAOlB,KAAI,SAACmH,EAAMC,GACjB,OAAGA,EAAI,EAEH,oBAAItJ,UAAU,oBAAd,SACGqJ,EAAK3G,MAD+B4G,GAKpC,gBAWFC,EAlFE,SAACjC,GAChB,MAAwBhH,mBAAS,MAAjC,mBAAOmC,EAAP,KAAaqF,EAAb,KAEA,EAAuCnG,IAAhCpB,EAAP,EAAOA,QAASE,EAAhB,EAAgBA,MAAO2B,EAAvB,EAAuBA,aAGvByD,qBAAU,WAAK2D,MAAc,CAAClC,IAE9B,IAAMkC,EAAa5I,uBAAY,WAC7B,IAAQ6I,EAAWnC,EAAXmC,OACHA,GAGLrH,EAAaqH,GACVzD,KAAKgC,KACP,CAAC5F,EAAckF,IAEZU,EAAe,SAACvF,GACpBqF,EAAQrF,IAGJiH,EAAWjH,GAAQlC,GAAWE,EAAQ,KAAO,cAAC,EAAD,IAC7CmG,EAAenG,EAAQ,cAAC,EAAD,IAAmB,KAC1CoG,EAAUtG,EAAU,cAAC,EAAD,IAAc,KAClC6H,EAAY7H,GAAWE,IAAUgC,EAA+B,KAAvB,cAAC,EAAD,CAAMA,KAAMA,IAE3D,OACE,sBAAKzC,UAAU,aAAf,UACG0J,EACA9C,EACAC,EACAuB,MC1CQ,MAA0B,mCCkC1BuB,EAzBE,WACf,MAAgCrJ,mBAAS,MAAzC,mBAAOsJ,EAAP,KAAqB9B,EAArB,KAMA,OACE,qCACE,cAAC,EAAD,UACE,cAAC,EAAD,MAEF,sBAAK9H,UAAU,gBAAf,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUwI,eAXK,SAACnG,GACtByF,EAAQzF,QAYJ,cAAC,EAAD,UACE,cAAC,EAAD,CAAUoH,OAAQG,SAGtB,qBAAK5J,UAAU,gBAAgBC,IAAK4J,EAAY1J,IAAI,eCiC3C2J,G,MApDK,WAEhB,IAAOC,EAAWC,cAAXD,QAEP,EAA0BzJ,mBAAS,MAAnC,mBAAO2J,EAAP,KAAcC,EAAd,KAEA,EAAmCvI,IAA5BpB,EAAP,EAAOA,QAASE,EAAhB,EAAgBA,MAAO+B,EAAvB,EAAuBA,SAGvBqD,qBAAU,WAAK2D,MAAc,CAACO,IAE9B,IAAMP,EAAa5I,uBAAY,WAC7B4B,EAASuH,GACN/D,KAAKmE,MAGJA,EAAgB,SAACF,GACrBC,EAASD,IAGLvC,EAAO,SAAC,GAAa,IAAZuC,EAAW,EAAXA,MAEJ3G,EAA6D2G,EAA7D3G,MAAOT,EAAsDoH,EAAtDpH,YAAaC,EAAyCmH,EAAzCnH,UAAWS,EAA8B0G,EAA9B1G,UAAWC,EAAmByG,EAAnBzG,SAAUE,EAASuG,EAATvG,MAE3D,OACI,sBAAK1D,UAAU,eAAf,UACI,qBAAKC,IAAK6C,EAAW3C,IAAKmD,EAAOtD,UAAU,sBAC3C,sBAAKA,UAAU,qBAAf,UACI,oBAAIA,UAAU,qBAAd,SAAoCsD,IACpC,mBAAGtD,UAAU,sBAAb,SAAoC6C,IACpC,mBAAG7C,UAAU,sBAAb,SAAoCuD,IACpC,oBAAGvD,UAAU,sBAAb,uBAA8CwD,KAC9C,qBAAKxD,UAAU,sBAAf,SAAsC0D,OAE1C,cAAC,IAAD,CAAM2C,GAAG,UAAUrG,UAAU,qBAA7B,6BAKN6G,EAAUtG,EAAU,cAAC,EAAD,IAAc,KAClCqG,EAAenG,EAAQ,cAAC,EAAD,IAAmB,KAC1C2H,EAAY7H,GAAWE,IAAUwJ,EAAkC,KAAzB,cAACvC,EAAD,CAAMuC,MAAOA,IAE7D,OACI,qCACKrD,EACAC,EACAuB,OC/CEgC,EARG,WACd,OACI,8BACK3J,KCqCE4J,G,MAvCG,WAChB,OACE,yBAAQrK,UAAU,cAAlB,UACE,oBAAIA,UAAU,aAAd,SACE,eAAC,IAAD,CAAMqG,GAAG,IAAT,UACE,0CADF,2BAIF,qBAAKrG,UAAU,YAAf,SACE,+BACE,6BACE,cAAC,IAAD,CACEsK,KAAG,EACHxG,MAAO,kBAAmB,CACxByG,MADK,EAAGC,SACU,UAAY,YAEhCnE,GAAG,IALL,0BAFJ,IAaE,6BACE,cAAC,IAAD,CACEiE,KAAG,EACHxG,MAAO,kBAAmB,CACxByG,MADK,EAAGC,SACU,UAAY,YAEhCnE,GAAG,UALL,gCCDGoE,EAnBH,WAEV,OACE,cAAC,IAAD,UACE,sBAAKzK,UAAU,MAAf,UACE,cAAC,EAAD,IACA,+BACI,eAAC,IAAD,WACE,cAAC,IAAD,CAAO+C,KAAK,IAAI0D,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAO1D,KAAK,UAAU0D,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAO1D,KAAK,mBAAmB0D,QAAS,cAAC,EAAD,MACxC,cAAC,IAAD,CAAO1D,KAAK,IAAI0D,QAAS,cAAC,EAAD,iB,MCXvCiE,IACGC,WAAWC,SAASC,eAAe,SACnCC,OACC,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,S","file":"static/js/main.b24eee84.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\r\nimport avengers from '../../resources/img/Avengers.png';\r\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\r\n\r\nconst AppBanner = () => {\r\n    return (\r\n        <div className=\"app__banner\">\r\n            <img src={avengers} alt=\"Avengers\"/>\r\n            <div className=\"app__banner-text\">\r\n                New comics every week!<br/>\r\n                Stay tuned!\r\n            </div>\r\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppBanner;","import { useState, useCallback } from \"react\";\r\n\r\nconst useHttp = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(\r\n    async (\r\n      url,\r\n      method = \"GET\",\r\n      body = null,\r\n      headers = { \"Content-Type\": \"application/json\" }\r\n    ) => {\r\n      setLoading(true);\r\n\r\n      try {\r\n        const response = await fetch(url, { method, body, headers });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Could not fetch ${url}, status:${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        setLoading(false);\r\n\r\n        return data;\r\n      } catch (e) {\r\n        setLoading(false);\r\n        setError(e.message);\r\n        throw e;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => {\r\n    setError(null);\r\n  }, []);\r\n\r\n  return { loading, request, error, clearError };\r\n};\r\n\r\nexport default useHttp;\r\n","import useHttp from \"../hooks/http.hook\"\r\n\r\nconst  useMarvelService = () => {\r\n  const { loading, request, error, clearError } = useHttp();\r\n\r\n  const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n  const _apiKey = \"apikey=27accb05a97b0c2d968924e51b5069ff\";\r\n  const _baseOffset = 164;\r\n\r\n\r\n  const getAllCharacters = async (offset = _baseOffset) => {\r\n    const res = await request(\r\n      `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n    );\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getCharacter = async (id) => {\r\n    const res = await request(\r\n      `${_apiBase}characters/${id}?${_apiKey}`\r\n    );\r\n    return _transformCharacter(res.data.results[0]);\r\n  };\r\n\r\n  const getAllComics = async (offset = 0) => {\r\n    const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\r\n    return res.data.results.map(_transformComics);\r\n  }\r\n\r\n  const getComic = async (id) => {\r\n      const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n      return _transformComics(res.data.results[0]);\r\n  }\r\n\r\n  const _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name.length > 10 ? `${char.name.substring(0, 15)}...` : char.name,\r\n      description: char.description ? `${char.description.substring(0, 164)}...` : 'There is no description',\r\n      thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics : char.comics.items,\r\n    };\r\n  };\r\n\r\n  const _transformComics = (comics) => {\r\n    return {\r\n        id: comics.id,\r\n        title: comics.title,\r\n        description: comics.description || 'There is no description',\r\n        pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\r\n        thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n        language: comics.textObjects.language || 'en-us',\r\n        price: comics.prices[0].price ? `${comics.prices[0].price}$` : 'not available'\r\n    }\r\n  }\r\n\r\n  return { loading, error, getAllCharacters, getCharacter, clearError, getAllComics, getComic};\r\n}\r\n\r\nexport default useMarvelService;\r\n","const Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <g transform=\"translate(80,50)\">\n            <g transform=\"rotate(0)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n            <g transform=\"rotate(45)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(50,80)\">\n            <g transform=\"rotate(90)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n            <g transform=\"rotate(135)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(20,50.00000000000001)\">\n            <g transform=\"rotate(180)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n            <g transform=\"rotate(225)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(49.99999999999999,20)\">\n            <g transform=\"rotate(270)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n            <g transform=\"rotate(315)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n            </circle>\n            </g>\n            </g>\n        </svg>\n    )\n}\n\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img src={img} style={{ display: 'block', width: '250px', height:'250px', objectFit: 'contain', margin: '0 auto'}} alt='Error'/>\r\n    );\r\n};\r\n\r\nexport default ErrorMessage;","import { useState, useEffect } from \"react\";\r\n\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../errorMassage/ErrorMassage\";\r\n\r\nimport \"./comicsList.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ComicsList = () => {\r\n  const [list, setList] = useState([]);\r\n  const [newItemLoading, setItemLoading] = useState(false);\r\n  const [offset, setOffset] = useState(0);\r\n  const [charEnded, setCharEnded] = useState(false);\r\n\r\n  const { loading, error, getAllComics } = useMarvelService();\r\n\r\n  useEffect(() => {\r\n    onRequest(offset, true);\r\n  }, []);\r\n\r\n  const onRequest = (offset, initial) => {\r\n    initial ? setItemLoading(false) : setItemLoading(true);\r\n    getAllComics(offset).then(getLoadingChar);\r\n  };\r\n\r\n  const getLoadingChar = (newList) => {\r\n    let ended = false;\r\n    if (newList.length < 0) {\r\n      ended = true;\r\n    }\r\n    setList([...list, ...newList]);\r\n    setItemLoading(false);\r\n    setOffset(offset + 8);\r\n    setCharEnded(ended);\r\n  };\r\n\r\n  const Comics = ({comics}) => {\r\n    const { thumbnail, price, title, id } = comics;\r\n\r\n    return (\r\n      <li className=\"comics__item\">\r\n        <Link to={`/comics/${id}`}>\r\n          <img\r\n            src={thumbnail}\r\n            alt={title}\r\n            className=\"comics__item-img\"\r\n          />\r\n          <div className=\"comics__item-name\">{title}</div>\r\n          <div className=\"comics__item-price\">{price}</div>\r\n        </Link>\r\n      </li>\r\n    );\r\n  };\r\n\r\n  const renderAllComics = (list) => {\r\n    let arr = [];\r\n\r\n    list.forEach((element) => {\r\n      arr.push(<Comics comics={element} key={element.id} />);\r\n    });\r\n\r\n    return <ul className=\"comics__grid\">{arr}</ul>;\r\n  };\r\n\r\n  const comicsAll = renderAllComics(list);\r\n\r\n  const errorMessage = error ? (\r\n      <ErrorMessage />\r\n  ) : null;\r\n  const spinner = loading && !newItemLoading ? (\r\n      <Spinner />\r\n  ) : null;\r\n\r\n  return (\r\n    <div className=\"comics__list\">\r\n      {comicsAll}{spinner}{errorMessage}\r\n      <button onClick={() => {onRequest(offset)}} className=\"button button__main button__long\">\r\n        <div className=\"inner\">load more</div>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComicsList;\r\n","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMassage/ErrorMassage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  state = {\r\n    error: false,\r\n  };\r\n\r\n\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    console.log(error, errorInfo);\r\n    this.setState({\r\n      error: true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      return <ErrorMessage/>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import AppBanner from '../appBanner/AppBanner';\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <ErrorBoundary>\r\n                <AppBanner/>\r\n                <ComicsList/>\r\n            </ErrorBoundary>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default ComicsPage;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import {  useEffect, useState } from \"react\";\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../errorMassage/ErrorMassage\";\r\n\r\nimport \"./randomChar.scss\";\r\nimport mjolnir from \"../../resources/img/mjolnir.png\";\r\n\r\nconst RandomChar = () => {\r\n  const [char,setChar] = useState({});\r\n\r\n\r\n  const {loading, error, getCharacter, clearError} = useMarvelService();\r\n\r\n  useEffect(()=>{updateChar();}, [])\r\n\r\n  const onCharloaded = (char) => {\r\n    setChar(char);\r\n  };\r\n\r\n\r\n  const updateChar = () => {\r\n    clearError();\r\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\r\n    getCharacter(id)\r\n      .then(onCharloaded)\r\n  };\r\n\r\n  const errorMessage = error ? <ErrorMessage /> : null;\r\n  const spinner = loading ? <Spinner /> : null;\r\n  const content = !(loading || error) ? <View char={char} /> : null;\r\n\r\n  return (\r\n    <div className=\"randomchar\">\r\n      {errorMessage}\r\n      {spinner}\r\n      {content}\r\n      <div className=\"randomchar__static\">\r\n        <p className=\"randomchar__title\">\r\n          Random character for today!\r\n          <br />\r\n          Do you want to get to know him better?\r\n        </p>\r\n        <p className=\"randomchar__title\">Or choose another one</p>\r\n        <button className=\"button button__main\" onClick={updateChar}>\r\n          <div className=\"inner\">try it</div>\r\n        </button>\r\n        <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nconst View = ({ char }) => {\r\n  const { name, description, thumbnail, homepage, wiki } = char;\r\n\r\n  const ojFit =\r\n    thumbnail ===\r\n    \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\r\n      ? \"contain\"\r\n      : \"cover\";\r\n\r\n  return (\r\n    <div className=\"randomchar__block\">\r\n      <img\r\n        src={thumbnail}\r\n        alt=\"Random character\"\r\n        className=\"randomchar__img\"\r\n        style={{ objectFit: `${ojFit}` }}\r\n      />\r\n      <div className=\"randomchar__info\">\r\n        <p className=\"randomchar__name\">{name}</p>\r\n        <p className=\"randomchar__descr\">{description}</p>\r\n        <div className=\"randomchar__btns\">\r\n          <a href={homepage} className=\"button button__main\">\r\n            <div className=\"inner\">homepage</div>\r\n          </a>\r\n          <a href={wiki} className=\"button button__secondary\">\r\n            <div className=\"inner\">Wiki</div>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RandomChar;\r\n","import { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../errorMassage/ErrorMassage\";\r\n\r\nimport \"./charList.scss\";\r\n\r\nconst CharList = (props) => {\r\n\r\n  const [list, setList] = useState([]);\r\n  const [newItemLoading, setItemLoading] = useState(false);\r\n  const [offset, setOffset] = useState(7);\r\n  const [charEnded, setCharEnded] = useState(false);\r\n\r\n  const {loading, error, getAllCharacters} = useMarvelService();\r\n\r\n  useEffect(() => {\r\n    onRequest(offset, true);\r\n  }, []);\r\n\r\n  const onRequest = (offset, initial) => {\r\n    initial ? setItemLoading(false) : setItemLoading(true);\r\n    getAllCharacters(offset)\r\n      .then(getLoadingChar)\r\n  };\r\n\r\n\r\n  const getLoadingChar = (newList) => {\r\n    let ended = false;\r\n    if (newList.length < 9) {\r\n      ended = true;\r\n    }\r\n    setList([...list, ...newList]);\r\n    setItemLoading(false);\r\n    setOffset(offset + 9);\r\n    setCharEnded(ended);\r\n  };\r\n\r\n  const getCharItem = (list) => {\r\n    let arr = [];\r\n\r\n    list.forEach((element) => {\r\n      arr.push(\r\n        <CharItem\r\n          heroes={element}\r\n          onCharSelected={props.onCharSelected}\r\n          key={element.id}\r\n        />\r\n      );\r\n    });\r\n    return arr;\r\n  };\r\n\r\n  let listHEroes = getCharItem(list);\r\n\r\n  const errorMessage = error ? (\r\n    <ul className=\"char__grid2\">\r\n      <ErrorMessage />\r\n    </ul>\r\n  ) : null;\r\n  const spinner = loading && !newItemLoading ? (\r\n    <ul className=\"char__grid2\">\r\n      <Spinner />\r\n    </ul>\r\n  ) : null;\r\n\r\n  return (\r\n    <div className=\"char__list\">\r\n      <ul className=\"char__grid\">\r\n        {listHEroes}\r\n        {errorMessage}\r\n        {spinner}\r\n      </ul>\r\n      <button\r\n        className=\"button button__main button__long\"\r\n        style={{ display: charEnded ? \"none\" : \"block\" }}\r\n        disabled={newItemLoading}\r\n        onClick={() => {\r\n          onRequest(offset);\r\n        }}\r\n      >\r\n        <div className=\"inner\">load more</div>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CharItem = ({ heroes, onCharSelected }) => {\r\n  const { id, name, thumbnail } = heroes;\r\n\r\n  let ojFit =\r\n    thumbnail ===\r\n    \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\r\n      ? \"contain\"\r\n      : \"cover\";\r\n\r\n  return (\r\n    <li\r\n      className=\"char__item\"\r\n      key={id}\r\n      onClick={() => onCharSelected(id)}\r\n      tabIndex={0}\r\n      onKeyPress={(e) => {\r\n        if (e.key === \" \" || e.key === \"Enter\") {\r\n          onCharSelected(id);\r\n        }\r\n      }}\r\n    >\r\n      <img src={thumbnail} alt={name} style={{ objectFit: `${ojFit}` }} />\r\n      <div className=\"char__name\">{name}</div>\r\n    </li>\r\n  );\r\n};\r\n\r\nCharList.propTypes = {\r\n  onCharSelected: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CharList;\r\n","import './skeleton.scss';\r\n\r\nconst Skeleton = () => {\r\n    return (\r\n        <>\r\n            <p className=\"char__select\">Please select a character to see information</p>\r\n            <div className=\"skeleton\">\r\n                <div className=\"pulse skeleton__header\">\r\n                    <div className=\"pulse skeleton__circle\"></div>\r\n                    <div className=\"pulse skeleton__mini\"></div>\r\n                </div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Skeleton;","import { useState, useEffect, useCallback} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport useMarvelService from \"../../services/MarvelService\";\r\n\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../errorMassage/ErrorMassage\";\r\nimport Skeleton from \"../skeleton/Skeleton\";\r\n\r\nimport \"./charInfo.scss\";\r\n\r\nconst CharInfo = (props) => {\r\n  const [char, setChar] = useState(null);\r\n\r\n  const {loading, error, getCharacter} = useMarvelService();\r\n\r\n\r\n  useEffect(()=>{upDateChar()},[props]);\r\n\r\n  const upDateChar = useCallback(() => {\r\n    const { charId } = props;\r\n    if (!charId) {\r\n      return;\r\n    }\r\n    getCharacter(charId)\r\n      .then(onCharloaded)\r\n  }, [getCharacter, props]);\r\n\r\n  const onCharloaded = (char) => {\r\n    setChar(char)\r\n  };\r\n\r\n  const skeleton = char || loading || error ? null : <Skeleton />;\r\n  const errorMessage = error ? <ErrorMessage /> : null;\r\n  const spinner = loading ? <Spinner /> : null;\r\n  const content = !(loading || error || !char) ? <View char={char} /> : null;\r\n\r\n  return (\r\n    <div className=\"char__info\">\r\n      {skeleton}\r\n      {errorMessage}\r\n      {spinner}\r\n      {content}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst View = ({char}) => {\r\n  const { name, description, thumbnail, homepage, wiki, comics } = char;\r\n\r\n  let infoSize = description.length > 164 ? description.substring(0, 164) + \"...\" : description;\r\n  let info = description === \"\" ? \"if you need more information click on homepage or wiki.\" : infoSize;\r\n  let ojFit = thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\" ? \"contain\" : \"cover\";\r\n\r\n  return (\r\n    <>\r\n      <div className=\"char__basics\">\r\n        <img src={thumbnail} alt={name} style={{ objectFit: `${ojFit}` }}/>\r\n        <div>\r\n          <div className=\"char__info-name\">{name}</div>\r\n          <div className=\"char__btns\">\r\n            <a href={homepage} className=\"button button__main\">\r\n              <div className=\"inner\">homepage</div>\r\n            </a>\r\n            <a href={wiki} className=\"button button__secondary\">\r\n              <div className=\"inner\">Wiki</div>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"char__descr\">{info}</div>\r\n      <div className=\"char__comics\">Comics:</div>\r\n      <ul className=\"char__comics-list\">\r\n        { comics.length === 0 ?  (<li className=\"char__comics-item\" key={785412369}>sorry no information</li>) : null}\r\n        {comics.map((item, i) => {\r\n          if(i < 6){\r\n            return (\r\n              <li className=\"char__comics-item\" key={i}>\r\n                {item.name}\r\n              </li>\r\n            );\r\n          }\r\n          return null;\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nCharInfo.propTypes = {\r\n  charId: PropTypes.number,\r\n}\r\n\r\nexport default CharInfo;\r\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\r\n\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\n\r\nimport decoration from \"../../resources/img/vision.png\";\r\n\r\nconst MainPage = () => {\r\n  const [selectedChar, setChar] = useState(null);\r\n\r\n  const onCharSelected = (id) => {\r\n    setChar(id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ErrorBoundary>\r\n        <RandomChar />\r\n      </ErrorBoundary>\r\n      <div className=\"char__content\">\r\n        <ErrorBoundary>\r\n          <CharList onCharSelected={onCharSelected} />\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <CharInfo charId={selectedChar} />\r\n        </ErrorBoundary>\r\n      </div>\r\n      <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import { useState, useEffect, useCallback} from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\n\r\nimport useMarvelService from \"../../../services/MarvelService\";\r\n\r\nimport Spinner from \"../../spinner/Spinner\";\r\nimport ErrorMessage from \"../../errorMassage/ErrorMassage\";\r\n\r\nimport './singleComic.scss';\r\n\r\nconst SingleComic = () => {\r\n\r\n    const {comicId} = useParams()\r\n\r\n    const [comic, setComic] = useState(null);\r\n\r\n    const {loading, error, getComic} = useMarvelService();\r\n\r\n\r\n    useEffect(()=>{upDateChar()},[comicId])\r\n  \r\n    const upDateChar = useCallback(() => {\r\n      getComic(comicId)\r\n        .then(onComicloaded)\r\n    });\r\n  \r\n    const onComicloaded = (comic) => {\r\n      setComic(comic)\r\n    };\r\n\r\n    const View = ({comic}) => {\r\n\r\n        const {title, description, thumbnail, pageCount, language, price} = comic;\r\n    \r\n        return(\r\n            <div className=\"single-comic\">\r\n                <img src={thumbnail} alt={title} className=\"single-comic__img\"/>\r\n                <div className=\"single-comic__info\">\r\n                    <h2 className=\"single-comic__name\">{title}</h2>\r\n                    <p className=\"single-comic__descr\">{description}</p>\r\n                    <p className=\"single-comic__descr\">{pageCount}</p>\r\n                    <p className=\"single-comic__descr\">Language: {language}</p>\r\n                    <div className=\"single-comic__price\">{price}</div>\r\n                </div>\r\n                <Link to=\"/comics\" className=\"single-comic__back\">Back to all</Link>\r\n            </div>\r\n        )\r\n    }\r\n  \r\n    const spinner = loading ? <Spinner /> : null;\r\n    const errorMessage = error ? <ErrorMessage /> : null;\r\n    const content = !(loading || error || !comic) ? <View comic={comic} /> : null;\r\n\r\n    return (\r\n        <>\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SingleComic;","import error from '../errorMassage/error.gif'\r\n\r\nconst ErrorPage = () => {\r\n    return (\r\n        <div>\r\n            {error}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ErrorPage;","import { NavLink, Link } from \"react-router-dom\";\r\nimport \"./appHeader.scss\";\r\n\r\nconst AppHeader = () => {\r\n  return (\r\n    <header className=\"app__header\">\r\n      <h1 className=\"app__title\">\r\n        <Link to=\"/\">\r\n          <span>Marvel</span> information portal\r\n        </Link>\r\n      </h1>\r\n      <nav className=\"app__menu\">\r\n        <ul>\r\n          <li>\r\n            <NavLink\r\n              and\r\n              style={({ isActive }) => ({\r\n                color: isActive ? \"#9f0013\" : \"inherit\",\r\n              })}\r\n              to=\"/\"\r\n            >\r\n              Characters\r\n            </NavLink>\r\n          </li>\r\n          /\r\n          <li>\r\n            <NavLink\r\n              and\r\n              style={({ isActive }) => ({\r\n                color: isActive ? \"#9f0013\" : \"inherit\",\r\n              })}\r\n              to=\"/comics\"\r\n            >\r\n              Comics\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\n\r\nimport {MainPage, ComicsPage, ErrorPage, SingleComic} from '../pages'\r\n\r\nimport AppHeader from \"../appHeader/AppHeader\";\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"app\">\r\n        <AppHeader />\r\n        <main>\r\n            <Routes>\r\n              <Route path=\"/\" element={<MainPage/>}/>\r\n              <Route path=\"/comics\" element={<ComicsPage/>}/>\r\n              <Route path='/comics/:comicId' element={<SingleComic/>}/>\r\n              <Route path='*' element={<ErrorPage/>}/>\r\n            </Routes>\r\n        </main>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './components/app/App';\r\n\r\nimport './style/style.scss';\r\n\r\nReactDOM\r\n  .createRoot(document.getElementById('root'))\r\n  .render(\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>,\r\n  );"],"sourceRoot":""}